// Code generated by MockGen. DO NOT EDIT.
// Source: ./persistence.go
//
// Generated by this command:
//
//	mockgen -source=./persistence.go -package=iwftest -destination=../iwftest/persistence.go
//
// Package iwftest is a generated GoMock package.
package iwftest

import (
	reflect "reflect"
	time "time"

	iwfidl "github.com/mitchjtn/iwf-golang-sdk/gen/iwfidl"
	gomock "go.uber.org/mock/gomock"
)

// MockPersistence is a mock of Persistence interface.
type MockPersistence struct {
	ctrl     *gomock.Controller
	recorder *MockPersistenceMockRecorder
}

// MockPersistenceMockRecorder is the mock recorder for MockPersistence.
type MockPersistenceMockRecorder struct {
	mock *MockPersistence
}

// NewMockPersistence creates a new mock instance.
func NewMockPersistence(ctrl *gomock.Controller) *MockPersistence {
	mock := &MockPersistence{ctrl: ctrl}
	mock.recorder = &MockPersistenceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersistence) EXPECT() *MockPersistenceMockRecorder {
	return m.recorder
}

// GetDataAttribute mocks base method.
func (m *MockPersistence) GetDataAttribute(key string, valuePtr any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetDataAttribute", key, valuePtr)
}

// GetDataAttribute indicates an expected call of GetDataAttribute.
func (mr *MockPersistenceMockRecorder) GetDataAttribute(key, valuePtr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataAttribute", reflect.TypeOf((*MockPersistence)(nil).GetDataAttribute), key, valuePtr)
}

// GetSearchAttributeBool mocks base method.
func (m *MockPersistence) GetSearchAttributeBool(key string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSearchAttributeBool", key)
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetSearchAttributeBool indicates an expected call of GetSearchAttributeBool.
func (mr *MockPersistenceMockRecorder) GetSearchAttributeBool(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSearchAttributeBool", reflect.TypeOf((*MockPersistence)(nil).GetSearchAttributeBool), key)
}

// GetSearchAttributeDatetime mocks base method.
func (m *MockPersistence) GetSearchAttributeDatetime(key string) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSearchAttributeDatetime", key)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetSearchAttributeDatetime indicates an expected call of GetSearchAttributeDatetime.
func (mr *MockPersistenceMockRecorder) GetSearchAttributeDatetime(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSearchAttributeDatetime", reflect.TypeOf((*MockPersistence)(nil).GetSearchAttributeDatetime), key)
}

// GetSearchAttributeDouble mocks base method.
func (m *MockPersistence) GetSearchAttributeDouble(key string) float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSearchAttributeDouble", key)
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetSearchAttributeDouble indicates an expected call of GetSearchAttributeDouble.
func (mr *MockPersistenceMockRecorder) GetSearchAttributeDouble(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSearchAttributeDouble", reflect.TypeOf((*MockPersistence)(nil).GetSearchAttributeDouble), key)
}

// GetSearchAttributeInt mocks base method.
func (m *MockPersistence) GetSearchAttributeInt(key string) int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSearchAttributeInt", key)
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetSearchAttributeInt indicates an expected call of GetSearchAttributeInt.
func (mr *MockPersistenceMockRecorder) GetSearchAttributeInt(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSearchAttributeInt", reflect.TypeOf((*MockPersistence)(nil).GetSearchAttributeInt), key)
}

// GetSearchAttributeKeyword mocks base method.
func (m *MockPersistence) GetSearchAttributeKeyword(key string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSearchAttributeKeyword", key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSearchAttributeKeyword indicates an expected call of GetSearchAttributeKeyword.
func (mr *MockPersistenceMockRecorder) GetSearchAttributeKeyword(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSearchAttributeKeyword", reflect.TypeOf((*MockPersistence)(nil).GetSearchAttributeKeyword), key)
}

// GetSearchAttributeKeywordArray mocks base method.
func (m *MockPersistence) GetSearchAttributeKeywordArray(key string) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSearchAttributeKeywordArray", key)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetSearchAttributeKeywordArray indicates an expected call of GetSearchAttributeKeywordArray.
func (mr *MockPersistenceMockRecorder) GetSearchAttributeKeywordArray(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSearchAttributeKeywordArray", reflect.TypeOf((*MockPersistence)(nil).GetSearchAttributeKeywordArray), key)
}

// GetSearchAttributeText mocks base method.
func (m *MockPersistence) GetSearchAttributeText(key string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSearchAttributeText", key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSearchAttributeText indicates an expected call of GetSearchAttributeText.
func (mr *MockPersistenceMockRecorder) GetSearchAttributeText(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSearchAttributeText", reflect.TypeOf((*MockPersistence)(nil).GetSearchAttributeText), key)
}

// GetStateExecutionLocal mocks base method.
func (m *MockPersistence) GetStateExecutionLocal(key string, valuePtr any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetStateExecutionLocal", key, valuePtr)
}

// GetStateExecutionLocal indicates an expected call of GetStateExecutionLocal.
func (mr *MockPersistenceMockRecorder) GetStateExecutionLocal(key, valuePtr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStateExecutionLocal", reflect.TypeOf((*MockPersistence)(nil).GetStateExecutionLocal), key, valuePtr)
}

// GetToReturn mocks base method.
func (m *MockPersistence) GetToReturn() ([]iwfidl.KeyValue, []iwfidl.KeyValue, []iwfidl.KeyValue, []iwfidl.SearchAttribute) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToReturn")
	ret0, _ := ret[0].([]iwfidl.KeyValue)
	ret1, _ := ret[1].([]iwfidl.KeyValue)
	ret2, _ := ret[2].([]iwfidl.KeyValue)
	ret3, _ := ret[3].([]iwfidl.SearchAttribute)
	return ret0, ret1, ret2, ret3
}

// GetToReturn indicates an expected call of GetToReturn.
func (mr *MockPersistenceMockRecorder) GetToReturn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToReturn", reflect.TypeOf((*MockPersistence)(nil).GetToReturn))
}

// RecordEvent mocks base method.
func (m *MockPersistence) RecordEvent(key string, value any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RecordEvent", key, value)
}

// RecordEvent indicates an expected call of RecordEvent.
func (mr *MockPersistenceMockRecorder) RecordEvent(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordEvent", reflect.TypeOf((*MockPersistence)(nil).RecordEvent), key, value)
}

// SetDataAttribute mocks base method.
func (m *MockPersistence) SetDataAttribute(key string, value any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDataAttribute", key, value)
}

// SetDataAttribute indicates an expected call of SetDataAttribute.
func (mr *MockPersistenceMockRecorder) SetDataAttribute(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDataAttribute", reflect.TypeOf((*MockPersistence)(nil).SetDataAttribute), key, value)
}

// SetSearchAttributeBool mocks base method.
func (m *MockPersistence) SetSearchAttributeBool(key string, value bool) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSearchAttributeBool", key, value)
}

// SetSearchAttributeBool indicates an expected call of SetSearchAttributeBool.
func (mr *MockPersistenceMockRecorder) SetSearchAttributeBool(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSearchAttributeBool", reflect.TypeOf((*MockPersistence)(nil).SetSearchAttributeBool), key, value)
}

// SetSearchAttributeDatetime mocks base method.
func (m *MockPersistence) SetSearchAttributeDatetime(key string, value time.Time) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSearchAttributeDatetime", key, value)
}

// SetSearchAttributeDatetime indicates an expected call of SetSearchAttributeDatetime.
func (mr *MockPersistenceMockRecorder) SetSearchAttributeDatetime(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSearchAttributeDatetime", reflect.TypeOf((*MockPersistence)(nil).SetSearchAttributeDatetime), key, value)
}

// SetSearchAttributeDouble mocks base method.
func (m *MockPersistence) SetSearchAttributeDouble(key string, value float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSearchAttributeDouble", key, value)
}

// SetSearchAttributeDouble indicates an expected call of SetSearchAttributeDouble.
func (mr *MockPersistenceMockRecorder) SetSearchAttributeDouble(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSearchAttributeDouble", reflect.TypeOf((*MockPersistence)(nil).SetSearchAttributeDouble), key, value)
}

// SetSearchAttributeInt mocks base method.
func (m *MockPersistence) SetSearchAttributeInt(key string, value int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSearchAttributeInt", key, value)
}

// SetSearchAttributeInt indicates an expected call of SetSearchAttributeInt.
func (mr *MockPersistenceMockRecorder) SetSearchAttributeInt(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSearchAttributeInt", reflect.TypeOf((*MockPersistence)(nil).SetSearchAttributeInt), key, value)
}

// SetSearchAttributeKeyword mocks base method.
func (m *MockPersistence) SetSearchAttributeKeyword(key, value string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSearchAttributeKeyword", key, value)
}

// SetSearchAttributeKeyword indicates an expected call of SetSearchAttributeKeyword.
func (mr *MockPersistenceMockRecorder) SetSearchAttributeKeyword(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSearchAttributeKeyword", reflect.TypeOf((*MockPersistence)(nil).SetSearchAttributeKeyword), key, value)
}

// SetSearchAttributeKeywordArray mocks base method.
func (m *MockPersistence) SetSearchAttributeKeywordArray(key string, value []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSearchAttributeKeywordArray", key, value)
}

// SetSearchAttributeKeywordArray indicates an expected call of SetSearchAttributeKeywordArray.
func (mr *MockPersistenceMockRecorder) SetSearchAttributeKeywordArray(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSearchAttributeKeywordArray", reflect.TypeOf((*MockPersistence)(nil).SetSearchAttributeKeywordArray), key, value)
}

// SetSearchAttributeText mocks base method.
func (m *MockPersistence) SetSearchAttributeText(key, value string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSearchAttributeText", key, value)
}

// SetSearchAttributeText indicates an expected call of SetSearchAttributeText.
func (mr *MockPersistenceMockRecorder) SetSearchAttributeText(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSearchAttributeText", reflect.TypeOf((*MockPersistence)(nil).SetSearchAttributeText), key, value)
}

// SetStateExecutionLocal mocks base method.
func (m *MockPersistence) SetStateExecutionLocal(key string, value any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetStateExecutionLocal", key, value)
}

// SetStateExecutionLocal indicates an expected call of SetStateExecutionLocal.
func (mr *MockPersistenceMockRecorder) SetStateExecutionLocal(key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetStateExecutionLocal", reflect.TypeOf((*MockPersistence)(nil).SetStateExecutionLocal), key, value)
}

// MockpersistenceInternal is a mock of persistenceInternal interface.
type MockpersistenceInternal struct {
	ctrl     *gomock.Controller
	recorder *MockpersistenceInternalMockRecorder
}

// MockpersistenceInternalMockRecorder is the mock recorder for MockpersistenceInternal.
type MockpersistenceInternalMockRecorder struct {
	mock *MockpersistenceInternal
}

// NewMockpersistenceInternal creates a new mock instance.
func NewMockpersistenceInternal(ctrl *gomock.Controller) *MockpersistenceInternal {
	mock := &MockpersistenceInternal{ctrl: ctrl}
	mock.recorder = &MockpersistenceInternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpersistenceInternal) EXPECT() *MockpersistenceInternalMockRecorder {
	return m.recorder
}

// GetToReturn mocks base method.
func (m *MockpersistenceInternal) GetToReturn() ([]iwfidl.KeyValue, []iwfidl.KeyValue, []iwfidl.KeyValue, []iwfidl.SearchAttribute) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToReturn")
	ret0, _ := ret[0].([]iwfidl.KeyValue)
	ret1, _ := ret[1].([]iwfidl.KeyValue)
	ret2, _ := ret[2].([]iwfidl.KeyValue)
	ret3, _ := ret[3].([]iwfidl.SearchAttribute)
	return ret0, ret1, ret2, ret3
}

// GetToReturn indicates an expected call of GetToReturn.
func (mr *MockpersistenceInternalMockRecorder) GetToReturn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToReturn", reflect.TypeOf((*MockpersistenceInternal)(nil).GetToReturn))
}
